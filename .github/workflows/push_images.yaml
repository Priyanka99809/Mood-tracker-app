name: Push Docker images to docker hub

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
           ref: main

      # 2️⃣ Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
          
      # 4️⃣ Run unit tests
      - name: Run tests
        run: |
          python -m unittest discover -s src -p "test_*.py"

      # 5️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6️⃣ Build Docker image
      - name: Build Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/mood-journal
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)  # first 7 chars of SHA
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$COMMIT_SHA .

      # 7️⃣ Push Docker image
      - name: Push Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/mood-journal
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)  # first 7 chars of SHA
          docker push ${{ secrets.DOCKER_USERNAME }}/mood-journal:latest
          docker push $IMAGE_NAME:$COMMIT_SHA
      
      - name: Clean up old local Docker images
        run: |
          docker image prune -f

      
      - name: Clean old SHA-tagged Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          # Get Docker Hub JWT token
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST -d '{"username": "'"$DOCKER_USERNAME"'", "password": "'"$DOCKER_PASSWORD"'"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)

          REPO=$DOCKER_USERNAME/mood-journal

          # List all tags
          TAGS_JSON=$(curl -s -H "Authorization: JWT $TOKEN" \
            "https://hub.docker.com/v2/repositories/$REPO/tags/?page_size=100")

          # Loop through tags and delete SHA tags (skip 'latest')
          echo "$TAGS_JSON" | jq -r '.results[].name' | grep -v '^latest$' | while read tag; do
            echo "Deleting tag: $tag"
            curl -s -X DELETE -H "Authorization: JWT $TOKEN" \
              "https://hub.docker.com/v2/repositories/$REPO/tags/$tag/"
          done